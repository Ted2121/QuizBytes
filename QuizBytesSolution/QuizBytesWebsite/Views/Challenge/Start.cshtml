<link rel="stylesheet" href="~/css/ChallengeQuizStyleSheet.css" />
<div class="wrapper">
<div class="quiz">
<div class="quiz-body">
    <div id="quiz-questions">
        <p id="error-message"></p>
    </div>
    </div>
</div>
</div>

<button class="btn-next" onclick="next()">Next</button>
<script src ="~/lib/jquery/dist/jquery.js"></script>
@*<script src="~/js/ChallengeQuizLogic.js"></script>*@

<script>

    let questionCount;
    let questions= []; 
    let unfoldedQuestions = [];

window.onload = () => {

    $.ajax({
        url: "@Url.Action("Quiz")",
        type: 'GET',
        dataType: "json",
        success: function (result) {
                //console.log(result);
            for(let question of Object.values(result)){
                    questions.push(question);
                    //console.log(questions);
            }
        
            for(let array of questions){
                for(let question of array){
                unfoldedQuestions.push(question);
                }
            }

            //console.log(unfoldedQuestions);

            questionCount = unfoldedQuestions.length;
            
            //console.log(questionCount);
            let correctAnswers = 0;
            let userAnswer;
            //console.log("test1");


            let questionIndex = 0;
                let question = document.getElementById("quiz-questions");
                    question.innerHTML = `<h2 class ="question-text">Q${questionIndex + 1}. ${unfoldedQuestions[questionIndex].question.questionText}</h2>`
                let ul = document.createElement("ul");
                    ul.setAttribute("class", "question-options");
                    question.appendChild(ul);
                let answers = [];

                    for (let answer of unfoldedQuestions[questionIndex].answers) {
                        var li = document.createElement("li");
                        li.setAttribute("class", "option");
                        li.appendChild(document.createTextNode(answer.answerText));
                        console.log(answer.answerText);
                        ul.appendChild(li);
                    answers.push(answer);
                }
                //console.log(answers);
                toggleActive();

            function toggleActive() {
                console.log("test in toggleActive function");
                let option = document.querySelectorAll("li.option");
                for (let i = 0; i < option.length; i++) {
                    option[i].onclick = function () {
                        for (let i = 0; i < option.length; i++) {
                            if (option[i].classList.contains("active")) {
                                option[i].classList.remove("active");
                                userAnswer = null;
                            }
                        }
                        option[i].classList.add("active");
                    }
                }
            }
        }

    }) 

}// onload

    function next() {
        if (questionCount == unfoldedQuestions.length - 1) {
            location.href = "../Leaderboard/Display"
            console.log("test in next func");
        }

        let userAnswer = $(".active").text();
        console.log(userAnswer);

        if (userAnswer == unfoldedQuestions[questionCount].answer) {
            correctAnswers++;
            sessionStorage.setItem("Correct Answers:", correctAnswers)
            console.log(correctAnswers);
        }

        questionCount++;
        show(questionCount);

    }

</script>